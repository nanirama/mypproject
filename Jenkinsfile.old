#!/usr/bin/env groovy

def PROJECT_NAME="showcase"
def S3_PRODUCTION_BUCKET_NAME="swapcard-showcase-production"
def S3_DEVELOPMENT_BUCKET_NAME="swapcard-showcase-develop"
def S3_DEVELOPMENT_PUBLIC_BUCKET_NAME="swapcard-showcase-develop-public-2"

def DOCKER_BUILD_TAG="build-${currentBuild.startTimeInMillis}"
def DOCKER_API="swapcard/${PROJECT_NAME}-api"

def DOCKER_IMAGE="swapcard/${PROJECT_NAME}-showcase:${DOCKER_BUILD_TAG}"
def DOCKER_RUN="${PROJECT_NAME}-showcase.${DOCKER_BUILD_TAG}"

def VERSION = ""
def NODE_ENV = ""


pipeline {
  agent any
  stages {
    stage('Prepare build') {
        steps {
          withCredentials([string(credentialsId: 'NPM_GITHUB_TOKEN', variable: 'NPM_GITHUB_TOKEN')]) {
              sh "docker build --force-rm --build-arg NPM_TOKEN=${NPM_GITHUB_TOKEN} -t ${DOCKER_IMAGE} -f Dockerfile ."
          }
       }
    }
    stage('Build') { 
        steps {
          sh "docker run -d --name ${DOCKER_RUN} ${DOCKER_IMAGE}"
          sh "docker cp ${DOCKER_RUN}:/usr/src/app/public ./showcase"
       }
    }
    stage('Deploy in dev') { 
       steps {
          sh "aws s3 sync ./showcase s3://${S3_DEVELOPMENT_BUCKET_NAME} --delete --cache-control public,max-age=31536000,immutable --acl public-read --exclude '*.html' --exclude '*/page-data.json' && aws s3 sync ./showcase s3://${S3_DEVELOPMENT_BUCKET_NAME} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate --acl public-read --content-type text/html --exclude '*.json' --include '*.html' && aws s3 sync ./showcase s3://${S3_DEVELOPMENT_BUCKET_NAME} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate --acl public-read --content-type application/json --include '*.json'"
          sh "aws s3 sync ./showcase s3://${S3_DEVELOPMENT_PUBLIC_BUCKET_NAME} --delete --cache-control public,max-age=31536000,immutable --acl public-read --exclude '*.html' --exclude '*/page-data.json' && aws s3 sync ./showcase s3://${S3_DEVELOPMENT_PUBLIC_BUCKET_NAME} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate --acl public-read --content-type text/html --exclude '*.json' --include '*.html' && aws s3 sync ./showcase s3://${S3_DEVELOPMENT_PUBLIC_BUCKET_NAME} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate --acl public-read --content-type application/json --include '*.json'"
       }
    }
    stage('Deploy production') {
      when {
        branch 'master'
      }
      steps {
         sh "aws s3 sync ./showcase s3://${S3_PRODUCTION_BUCKET_NAME} --delete --cache-control public,max-age=31536000,immutable --acl public-read --exclude '*.html' --exclude '*/page-data.json' && aws s3 sync ./showcase s3://${S3_PRODUCTION_BUCKET_NAME} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate --acl public-read --content-type text/html --exclude '*.json' --include '*.html' && aws s3 sync ./showcase s3://${S3_PRODUCTION_BUCKET_NAME} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate --acl public-read --content-type application/json --include '*.json'"
      }
    }
  }
}